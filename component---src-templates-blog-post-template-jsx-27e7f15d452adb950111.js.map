{"version":3,"file":"component---src-templates-blog-post-template-jsx-27e7f15d452adb950111.js","mappings":"sMAOe,SAASA,EAAiBC,GACxC,IAAMC,EAAOD,EAAME,KAAKC,eAExB,OACC,UAAC,IAAD,YACC,SAAC,IAAD,CAA4BC,MAAOH,EAAKI,YAAYD,MAAOE,YAAaL,EAAKM,WAC7E,gBAAKC,UAAU,4BAAf,UACC,oBAASA,UAAU,eAAnB,UACC,iBAAKA,UAAU,eAAf,UACEP,EAAKI,YAAYI,MACjB,gBAAKD,UAAU,mBAAf,UACC,6BACC,SAAC,EAAAE,EAAD,CACCC,MAAOV,EAAKI,YAAYI,IAAIG,gBAAgBC,gBAC5CL,UAAU,aAEVM,IAAI,IADCb,EAAKI,YAAYI,IAAIG,gBAAgBC,gBAAgBE,UAM9D,iBAAKP,UAAU,eAAf,WACC,oBAAQA,UAAU,cAAlB,WACC,eAAIA,UAAU,aAAd,SAA4BP,EAAKI,YAAYD,SAC7C,gBAAKI,UAAU,YAAf,UACC,0BAAOP,EAAKI,YAAYW,aAG1B,gBAAKC,wBAAyB,CAAEC,OAAQjB,EAAKkB,SAC7C,gBAAKX,UAAU,cAAf,UACC,gBAAKA,UAAU,WAAf,SACEP,EAAKI,YAAYe,MACjBnB,EAAKI,YAAYe,KAAKC,KAAI,SAAAC,GAAG,OAC5B,2BACC,UAAC,EAAAC,KAAD,CAAMf,UAAU,MAAMgB,GAAE,UAAWC,EAAAA,EAAAA,SAAQH,GAAnB,IAAxB,eACIA,MAFMA,yB,iBCxCtBI,EAAOC,QAAU,CAChBF,QAAS,SAAAG,GAERA,GADAA,EAAMA,EAAIC,QAAQ,aAAc,KACtBC,cAKV,IAFA,IAAMC,EAAO,+BAEJC,EAAI,EAAGC,EAAIF,EAAKG,OAAQF,EAAIC,EAAGD,IACvCJ,EAAMA,EAAIC,QAAQ,IAAIM,OAAOJ,EAAKK,OAAOJ,GAAI,KAFnC,+BAE4CI,OAAOJ,IAQ9D,OALAJ,EAAMA,EACJC,QAAQ,eAAgB,IACxBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO","sources":["webpack:///./src/templates/BlogPostTemplate.jsx","webpack:///./src/util/index.js"],"sourcesContent":["import { Link, graphql } from \"gatsby\";\nimport { slugify } from \"../util/index\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport SearchEngineOptimalisation from \"../components/SearchEngineOptimalisation\";\n\nexport default function BlogPostTemplate(props) {\n\tconst post = props.data.markdownRemark;\n\n\treturn (\n\t\t<DefaultLayout>\n\t\t\t<SearchEngineOptimalisation title={post.frontmatter.title} description={post.excerpt} />\n\t\t\t<div className=\"clearfix post-content-box\">\n\t\t\t\t<article className=\"article-page\">\n\t\t\t\t\t<div className=\"page-content\">\n\t\t\t\t\t\t{post.frontmatter.img && (\n\t\t\t\t\t\t\t<div className=\"page-cover-image\">\n\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t<GatsbyImage\n\t\t\t\t\t\t\t\t\t\timage={post.frontmatter.img.childImageSharp.gatsbyImageData}\n\t\t\t\t\t\t\t\t\t\tclassName=\"page-image\"\n\t\t\t\t\t\t\t\t\t\tkey={post.frontmatter.img.childImageSharp.gatsbyImageData.src}\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"wrap-content\">\n\t\t\t\t\t\t\t<header className=\"header-page\">\n\t\t\t\t\t\t\t\t<h1 className=\"page-title\">{post.frontmatter.title}</h1>\n\t\t\t\t\t\t\t\t<div className=\"page-date\">\n\t\t\t\t\t\t\t\t\t<span>{post.frontmatter.date}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.html }} />\n\t\t\t\t\t\t\t<div className=\"page-footer\">\n\t\t\t\t\t\t\t\t<div className=\"page-tag\">\n\t\t\t\t\t\t\t\t\t{post.frontmatter.tags &&\n\t\t\t\t\t\t\t\t\t\tpost.frontmatter.tags.map(tag => (\n\t\t\t\t\t\t\t\t\t\t\t<span key={tag}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"tag\" to={`/tags/${slugify(tag)}/`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t# {tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t</DefaultLayout>\n\t);\n}\n\nexport const pageQuery = graphql`\n\tquery BlogPostBySlug($slug: String!) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tauthor\n\t\t\t}\n\t\t}\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\tid\n\t\t\texcerpt(pruneLength: 160)\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"YYYY, MMM DD\")\n\t\t\t\ttags\n\t\t\t\timg {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tgatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH, formats: [AUTO, AVIF, WEBP])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","module.exports = {\n\tslugify: str => {\n\t\tstr = str.replace(/^\\s+|\\s+$/g, \"\"); // trim\n\t\tstr = str.toLowerCase();\n\n\t\t// remove accents, swap ñ for n, etc\n\t\tconst from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n\t\tconst to = \"aaaaeeeeiiiioooouuuunc------\";\n\t\tfor (let i = 0, l = from.length; i < l; i++) {\n\t\t\tstr = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i));\n\t\t}\n\n\t\tstr = str\n\t\t\t.replace(/[^a-z0-9 -]/g, \"\") // remove invalid chars\n\t\t\t.replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n\t\t\t.replace(/-+/g, \"-\"); // collapse dashes\n\n\t\treturn str;\n\t},\n};\n"],"names":["BlogPostTemplate","props","post","data","markdownRemark","title","frontmatter","description","excerpt","className","img","G","image","childImageSharp","gatsbyImageData","alt","src","date","dangerouslySetInnerHTML","__html","html","tags","map","tag","Link","to","slugify","module","exports","str","replace","toLowerCase","from","i","l","length","RegExp","charAt"],"sourceRoot":""}